Kruskal’s algorithm to find the minimum cost spanning tree uses the __greedy approach@@.
The Greedy Choice is to pick the smallest weight edge that does not cause a cycle in the MST constructed so far.


Step 1: Sort all the edges in non-decreasing order of their weight

Step 2: Pick the smallest edge. Check if it forms a cycle with the spanning tree formed so far. If cycle is not formed, include this edge. Else, discard it. 

Step 3: Repeat step#2 until there are (V-1) edges in the spanning tree


* Time Complexity: O(ElogE) or O(ElogV), 
Sorting of edges takes O(ELogE) time. After sorting, we iterate through all edges and apply the find-union algorithm. The find and union operations can take at most O(LogV) time. So overall complexity is O(ELogE + ELogV) time. 
The value of E can be at most O(V2), so O(LogV) is O(LogE) the same. Therefore, the overall time complexity is O(ElogE) or O(ElogV)

* Auxiliary Space: O(V + E), 
where V is the number of vertices and E is the number of edges in the graph